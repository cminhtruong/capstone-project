apply plugin: 'com.android.application'

def keystorePropertiesFile = rootProject.file("keystore.properties")

// Initialize a new Properties() object called keystoreProperties.
def keystoreProperties = new Properties()

// Load your keystore.properties file into the keystoreProperties object.
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    signingConfigs {
        config {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }
    compileSdkVersion 27
    defaultConfig {
        applicationId "dalker.cmtruong.com.app"
        minSdkVersion 21
        targetSdkVersion 27
        versionCode 2
        versionName "1.1"
        multiDexEnabled true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    dexOptions {
        preDexLibraries = false
        javaMaxHeapSize "2g"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            debuggable false
            jniDebuggable false
            signingConfig signingConfigs.config
        }
    }
    task installRelease(group:'install', dependsOn:'installFreeRelease') {
        println 'installRelease call forwarded to installFreeRelease'
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    flavorDimensions 'version'
    productFlavors {
        free {
            dimension 'version'
            applicationIdSuffix '.free'
            signingConfig signingConfigs.config
        }
//        paid {
//            dimension 'version'
//            applicationIdSuffix '.paid'
//        }
        demo {
            dimension 'version'
            applicationIdSuffix '.demo'
        }
    }
}

ext {
    supportLibrariesVersion = '27.1.1'
    constraintVersion = '1.1.2'
    junitVersion = '4.12'
    supportTestVersion = '1.0.2'
    espressoVersion = '3.0.2'
    firebaseCoreVersion = '16.0.1'
    firestoreVersion = '17.1.0'
    firebaseStorage = '4.1.0'
    circleImageVersion = '2.2.0'
    androidAdmodVersion = '15.0.1'
    lifecycleVersion = '1.1.1'
    roomVersion = '1.1.1'
    butterknife = '8.8.1'
    timberVersion = '4.7.1'
    gsonVersion = '2.8.5'
    picasso = '2.71828'
    glide = '4.8.0'
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    //noinspection GradleCompatible
    implementation "com.android.support:appcompat-v7:$supportLibrariesVersion"
    implementation "com.android.support:support-compat:$supportLibrariesVersion"
    implementation "com.android.support:recyclerview-v7:$supportLibrariesVersion"
    implementation "com.android.support:support-fragment:$supportLibrariesVersion"
    implementation "com.android.support.constraint:constraint-layout:$constraintVersion"
    implementation "com.android.support:cardview-v7:$supportLibrariesVersion"
    implementation "com.android.support:design:$supportLibrariesVersion"
    implementation "com.android.support.constraint:constraint-layout:$constraintVersion"
    implementation "com.google.firebase:firebase-storage:$firebaseCoreVersion"
    implementation "com.google.firebase:firebase-database:$firebaseCoreVersion"
    implementation "com.google.firebase:firebase-auth:$firebaseCoreVersion"
    implementation "com.firebaseui:firebase-ui-storage:$firebaseStorage"
    freeImplementation "com.google.firebase:firebase-ads:$androidAdmodVersion"
    testImplementation "junit:junit:$junitVersion"
    androidTestImplementation "com.android.support.test:runner:$supportTestVersion"
    androidTestImplementation "com.android.support.test.espresso:espresso-core:$espressoVersion"
    implementation "com.google.firebase:firebase-core:$firebaseCoreVersion"
    implementation "com.google.firebase:firebase-firestore:$firestoreVersion"
    implementation "de.hdodenhof:circleimageview:$circleImageVersion"
    freeImplementation "com.google.android.gms:play-services-ads:$androidAdmodVersion"
    implementation "com.google.android.gms:play-services-location:$androidAdmodVersion"
    implementation "android.arch.lifecycle:extensions:$lifecycleVersion"
    implementation "android.arch.lifecycle:viewmodel:$lifecycleVersion"
    annotationProcessor "android.arch.lifecycle:compiler:$lifecycleVersion"
    implementation "android.arch.persistence.room:runtime:$roomVersion"
    annotationProcessor "android.arch.persistence.room:compiler:$roomVersion"
    implementation "com.jakewharton:butterknife:$butterknife"
    annotationProcessor "com.jakewharton:butterknife-compiler:$butterknife"
    implementation "com.jakewharton.timber:timber:$timberVersion"
    implementation "com.google.code.gson:gson:$gsonVersion"
    implementation "com.squareup.picasso:picasso:$picasso"
    implementation "com.github.bumptech.glide:glide:$glide"
    annotationProcessor "com.github.bumptech.glide:compiler:$glide"
}

apply plugin: 'com.google.gms.google-services'
